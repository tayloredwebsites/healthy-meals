
volumes:
  hm_pg_db_vol: {}


services:
  web:
    build: .
    image: hm_web_image
    container_name: hm_web_image
    # To Do: get auto code updating to docker working
    # volumes:
    #   - .:/code
    ports:
      - 8000:8000
    depends_on:
      - pg_db
    env_file: ".env"
    environment:

      POSTGRES_HOST: pg_db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

      DATABASE_HOST: pg_db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}

      # Poetry's configuration:
      POETRY_NO_INTERACTION: 1
      POETRY_VIRTUALENVS_CREATE: false
      POETRY_CACHE_DIR: '/var/cache/pypoetry'
      POETRY_HOME: '/usr/local'
      POETRY_VERSION: 2.1.3

    platform: linux/x86_64

    # https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker
    command: sh -c "apt-get update && apt-get install -y curl &&
        poetry --version &&
        poetry show &&
        echo "@ Run migrations" &&
        poetry run python manage.py makemigrations &&
        poetry run python manage.py migrate &&
        echo "@ sass" &&
        poetry run sass static/scss:static/css &&
        echo "@ collectstatic" &&
        poetry run python manage.py collectstatic --noinput &&
        echo "@ runserver" &&
        poetry run python manage.py runserver 0.0.0.0:8000"


  pg_db:
    image: postgres:16-alpine
    volumes:
      - hm_pg_db_vol:/var/lib/postgresql/data
    restart: unless-stopped
    environment:

      POSTGRES_HOST: pg_db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
